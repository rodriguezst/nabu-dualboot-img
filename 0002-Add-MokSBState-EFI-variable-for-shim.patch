From fd869fbf24d32f42bcfd1239337fbe65d32e7c4b Mon Sep 17 00:00:00 2001
From: rodriguezst <2828844+rodriguezst@users.noreply.github.com>
Date: Sun, 3 Nov 2024 15:46:04 +0100
Subject: [PATCH] Add MokSBState EFI variable for shim

---
 .../Library/AuthVariableLib/AuthVariableLib.c | 52 +++++++++++++++++++
 1 file changed, 52 insertions(+)

diff --git a/Platforms/SurfaceDuoFamilyPkg/Library/AuthVariableLib/AuthVariableLib.c b/Platforms/SurfaceDuoFamilyPkg/Library/AuthVariableLib/AuthVariableLib.c
index d9da0e1b..cd77ad2a 100644
--- a/Platforms/SurfaceDuoFamilyPkg/Library/AuthVariableLib/AuthVariableLib.c
+++ b/Platforms/SurfaceDuoFamilyPkg/Library/AuthVariableLib/AuthVariableLib.c
@@ -18,6 +18,9 @@ SPDX-License-Identifier: BSD-2-Clause-Patent
 
 #include "AuthServiceInternal.h"
 
+#define EFI_MOKSBSTATE_NAME L"MokSBState"
+#define EFI_MOKSBSTATERT_NAME L"MokSBStateRT"
+
 ///
 /// Global database array for scratch
 ///
@@ -28,6 +31,8 @@ UINT8   mVendorKeyState;
 
 EFI_GUID  mSignatureSupport[] = { EFI_CERT_SHA1_GUID, EFI_CERT_SHA256_GUID, EFI_CERT_RSA2048_GUID, EFI_CERT_X509_GUID };
 
+EFI_GUID  gEfiMokSBStateVariableGuid = { 0x605DAB50, 0xE046, 0x4300, {0xab, 0xb6, 0x3d, 0xd8, 0x10, 0xdd, 0x8b, 0x23}};
+
 //
 // Hash context pointer
 //
@@ -89,6 +94,28 @@ VARIABLE_ENTRY_PROPERTY  mAuthVarEntry[] = {
       MAX_UINTN
     }
   },
+  {
+    &gEfiMokSBStateVariableGuid,
+    EFI_MOKSBSTATE_NAME,
+    {
+      VAR_CHECK_VARIABLE_PROPERTY_REVISION,
+      0,
+      VARIABLE_ATTRIBUTE_NV_BS,
+      sizeof (UINT8),
+      sizeof (UINT8)
+    }
+  },
+  {
+    &gEfiMokSBStateVariableGuid,
+    EFI_MOKSBSTATERT_NAME,
+    {
+      VAR_CHECK_VARIABLE_PROPERTY_REVISION,
+      0,
+      VARIABLE_ATTRIBUTE_NV_BS_RT,
+      sizeof (UINT8),
+      sizeof (UINT8)
+    }
+  },
 };
 
 VOID  **mAuthVarAddressPointer[9];
@@ -125,6 +152,7 @@ AuthVariableLibInitialize (
   UINT8       SecureBootEnable;
   UINT8       CustomMode;
   UINT32      ListSize;
+  UINT8       MokSBStateStatus;
 
   if ((AuthVarLibContextIn == NULL) || (AuthVarLibContextOut == NULL)) {
     return EFI_INVALID_PARAMETER;
@@ -259,6 +287,30 @@ AuthVariableLibInitialize (
     return Status;
   }
 
+  MokSBStateStatus = 1;
+
+  Status = AuthServiceInternalUpdateVariable (
+             EFI_MOKSBSTATE_NAME,
+             &gEfiMokSBStateVariableGuid,
+             &MokSBStateStatus,
+             sizeof (UINT8),
+             EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_BOOTSERVICE_ACCESS
+             );
+  if (EFI_ERROR (Status)) {
+    return Status;
+  }
+
+  Status = AuthServiceInternalUpdateVariable (
+             EFI_MOKSBSTATERT_NAME,
+             &gEfiMokSBStateVariableGuid,
+             &MokSBStateStatus,
+             sizeof (UINT8),
+             EFI_VARIABLE_RUNTIME_ACCESS | EFI_VARIABLE_NON_VOLATILE | EFI_VARIABLE_BOOTSERVICE_ACCESS
+             );
+  if (EFI_ERROR (Status)) {
+    return Status;
+  }
+
   DEBUG ((DEBUG_INFO, "Variable %s is %x\n", EFI_SETUP_MODE_NAME, mPlatformMode));
   DEBUG ((DEBUG_INFO, "Variable %s is %x\n", EFI_SECURE_BOOT_MODE_NAME, SecureBootMode));
   DEBUG ((DEBUG_INFO, "Variable %s is %x\n", EFI_SECURE_BOOT_ENABLE_NAME, SecureBootEnable));
-- 
2.34.1
